{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","hooks/useLocalStorage.js","index.js","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","addNewContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","Contact","deleteFunction","listItem","listBtn","onClick","ContactList","contactsList","deleteContactBtn","contacts","map","Filter","updateFilterFunc","Notification","msg","App","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","contactsToShow","toLowerCase","includes","find","el","toast","info","nanoid","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e87ab80d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ addNewContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  }\r\n\r\n  function submitNewContact(e) {\r\n    e.preventDefault();\r\n    addNewContact(name, number);\r\n    clearForm();\r\n  }\r\n\r\n  function clearForm() {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitNewContact} className={s.form}>\r\n      <label className={s.label} htmlFor=\"name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label className={s.label} htmlFor=\"number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        className={s.listBtn}\r\n        onClick={() => {\r\n          deleteFunction(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contactsList, deleteContactBtn }) {\r\n  const contacts = contactsList.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contacts}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContactBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, updateFilterFunc }) {\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={value}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  updateFilterFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","function Notification({ msg }) {\r\n  return <p>{msg}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { nanoid } from \"nanoid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/Notification\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage();\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const addNewContact = (name, number) => {\r\n    if (contacts.find((el) => el.name === name)) {\r\n      return toast.info(`${name} is already in contacts`);\r\n    }\r\n    setContacts([...contacts, { id: nanoid(), name, number }]);\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    setContacts(contacts.filter((el) => el.id !== id));\r\n  };\r\n\r\n  const updateFilter = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getFilteredContacs = () => {\r\n    return contacts.filter((e) =>\r\n      e.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const contactsToShow = getFilteredContacs();\r\n  const noContactsAdded = \"You seem not to have any contacts yet\";\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm addNewContact={addNewContact} />\r\n      <h2>Contacts</h2>\r\n      {contacts.length ? (\r\n        <>\r\n          <Filter value={filter} updateFilterFunc={updateFilter} />\r\n          <ContactList\r\n            contactsList={contactsToShow}\r\n            deleteContactBtn={deleteContact}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Notification msg={noContactsAdded} />\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\nexport default function useLocalStorage() {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(localStorage.getItem(\"contacts\")) ?? []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-s9E\",\"label\":\"ContactForm_label__1-Wgl\",\"input\":\"ContactForm_input__1FbxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__1h_tY\",\"listBtn\":\"Contact_listBtn__2NkiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1UDEu\",\"input\":\"Filter_input__3ZZ1a\"};"],"sourceRoot":""}